"use client";

import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Badge } from "@/components/ui/badge";
import { ChevronDown } from "lucide-react";
import { VulnerabilityDetails } from "@/components/vulnerability-details";
import type { Vulnerability } from "@/types/scanner";

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
}

export function VulnerabilityCard({ vulnerability }: VulnerabilityCardProps) {
  // Set isExpanded to true by default
  const [isExpanded, setIsExpanded] = useState(true);

  const getRiskBadgeColor = (risk: string) => {
    switch (risk) {
      case "High":
        return "bg-red-500 hover:bg-red-600";
      case "Medium":
        return "bg-orange-500 hover:bg-orange-600";
      case "Low":
        return "bg-yellow-500 hover:bg-yellow-600";
      default:
        return "bg-gray-500 hover:bg-gray-600";
    }
  };

  return (
    <motion.div
      className="cursor-pointer overflow-hidden rounded-lg border"
      whileHover={{
        boxShadow:
          "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
      }}
      transition={{ duration: 0.2 }}
      onClick={() => setIsExpanded(!isExpanded)}
      role="button"
      tabIndex={0}
      aria-expanded={isExpanded}
      onKeyDown={(e) => {
        if (e.key === "Enter" || e.key === " ") {
          e.preventDefault();
          setIsExpanded(!isExpanded);
        }
      }}
    >
      <div className="flex items-center justify-between bg-muted/30 p-4">
        <div className="flex items-center gap-2">
          <Badge className={getRiskBadgeColor(vulnerability.risk)}>
            {vulnerability.risk} Risk
          </Badge>
          <h3 className="text-lg font-medium">{vulnerability.name}</h3>
        </div>
        <motion.div
          animate={{ rotate: isExpanded ? 180 : 0 }}
          transition={{ duration: 0.3 }}
        >
          <ChevronDown className="h-4 w-4" />
        </motion.div>
      </div>
      <div className="bg-muted/10 px-4 py-2">
        <p className="text-sm text-muted-foreground">
          {vulnerability.description}
        </p>
      </div>

      <AnimatePresence initial={false}>
        {isExpanded && (
          <motion.div
            id={`vuln-details-${vulnerability.name.replace(/\s+/g, "-").toLowerCase()}`}
            className="border-t"
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: "auto" }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
          >
            <VulnerabilityDetails vulnerability={vulnerability} />
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
}
